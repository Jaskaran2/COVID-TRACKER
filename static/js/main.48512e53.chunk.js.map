{"version":3,"sources":["InfoBox.js","util.js","Map.js","Table.js","LineGraph.js","axios.js","Chart.js","Country.js","Widgets.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","active","title","cases","casesType","total","props","customStyle","borderTopColor","borderTop","console","log","className","Card","style","onClick","CardContent","Typography","color","casesTypeColors","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","map","country","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","backgroundImage","flag","numeral","format","prettyPrintStats","stat","Map","countries","zoom","TileLayer","url","attribution","Table","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","changableUrl","axios","get","requiredData","confirmed","lastUpdate","fetchDailyData","modifiedData","dailyData","reportDate","fetchCountries","name","Chart","setDailyData","fetchAPI","lineChart","labels","fill","barChart","dipslay","text","Country","fetchedCountries","setFetchedCountries","graphData","setGraphData","mapCountry","setMapCountry","graph","graphsData","FormControl","NativeSelect","defaultValue","onChange","e","target","vlaue","i","Widgets","src","width","height","margin","border","overflow","scrolling","farmeborder","allowTransparency","allow","Header","alt","href","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","iso2","getCountriesData","onCountryChange","event","countryCode","Select","variant","MenuItem","todayCases","todayRecovered","todayDeaths","textAlign","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8fAqCeA,MAjCf,YAAgE,IAA9CC,EAA6C,EAA7CA,OAAOC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,MAAMC,EAA0B,EAA1BA,UAAUC,EAAgB,EAAhBA,MAASC,EAAO,8DAEvDC,EAAY,CAChBC,eAAe,IAcf,MAXa,UAAZJ,GAAsBH,EACvBM,EAAYE,UAAU,oBAEJ,WAAZL,GAAwBH,EAC9BM,EAAYE,UAAU,iBAEJ,cAAZL,GAA2BH,IACjCM,EAAYE,UAAU,0BAGxBC,QAAQC,IAAI,uBAAuBP,GAE/B,qBAAKQ,UAAU,UAAf,SACE,cAACC,EAAA,EAAD,CACCC,MAAOP,EACNQ,QAAST,EAAMS,QAFjB,SAGE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYL,UAAU,iBAAiBM,MAAM,gBAA7C,SAA8DhB,IAC9D,oBAAIU,UAAU,iBAAd,SAAgCT,IAChC,eAACc,EAAA,EAAD,CAAYL,UAAU,iBAAiBM,MAAM,gBAA7C,UAA8Db,EAA9D,oB,uECzBNc,EAAkB,CACtBhB,MAAO,CACLiB,IAAK,UACLC,WAAY,KAEdC,UAAW,CACTF,IAAK,UACLC,WAAY,KAEdE,OAAQ,CACNH,IAAK,UACLC,WAAY,MAIHG,EAAS,SAACC,GACrB,IAAMC,EAAW,YAAID,GASrB,OAPAC,EAAWC,MAAK,SAACC,EAAEC,GACjB,OAAGD,EAAEzB,MAAM0B,EAAE1B,OACH,EAED,KAGJuB,GAIII,EAAgB,SAACL,GAAD,IAAOrB,EAAP,uDAAmB,QAAnB,OAC3BqB,EAAKM,KAAI,SAACC,GAAD,OACP,cAACC,EAAA,EAAD,CACEC,OAAQ,CAACF,EAAQG,YAAYC,IAAKJ,EAAQG,YAAYE,MACtDnB,MAAOC,EAAgBf,GAAWgB,IAClCkB,UAAWnB,EAAgBf,GAAWgB,IACtCmB,YAAa,GACbC,OACEC,KAAKC,KAAKV,EAAQ5B,IAAce,EAAgBf,GAAWiB,WAN/D,SASE,cAACsB,EAAA,EAAD,UACE,sBAAK/B,UAAU,iBAAf,UACE,qBACEA,UAAU,YACVE,MAAO,CAAE8B,gBAAgB,OAAD,OAASZ,EAAQG,YAAYU,KAA7B,QAE1B,qBAAKjC,UAAU,YAAf,SAA4BoB,EAAQA,UACpC,sBAAKpB,UAAU,iBAAf,oBACUkC,IAAQd,EAAQ7B,OAAO4C,OAAO,UAExC,sBAAKnC,UAAU,iBAAf,wBACckC,IAAQd,EAAQV,WAAWyB,OAAO,UAEhD,sBAAKnC,UAAU,cAAf,qBACWkC,IAAQd,EAAQT,QAAQwB,OAAO,qBAOvCC,EAAiB,SAACC,GAAD,OAC5BA,EAAI,WAAOH,IAAQG,GAAMF,OAAO,SAAU,MC/C7BG,MAdf,YAAgD,IAAlCC,EAAiC,EAAjCA,UAAUjB,EAAuB,EAAvBA,OAAOkB,EAAgB,EAAhBA,KAAKhD,EAAW,EAAXA,UAClC,OACE,sBAAKQ,UAAU,MAAf,UACE,2CACA,eAAC,IAAD,CAAasB,OAAQA,EAAQkB,KAAMA,EAAnC,UACF,cAACC,EAAA,EAAD,CAAWC,IAAI,qDACXC,YAAY,yEAEbzB,EAAcqB,EAAU/C,U,OCIhBoD,MAbf,YAA4B,IAAZL,EAAW,EAAXA,UACd,OACE,qBAAKvC,UAAU,QAAf,SACGuC,EAAUpB,KAAI,SAAAC,GAAO,OACpB,+BACA,6BAAKA,EAAQA,UACf,6BAAI,iCAASc,IAAQd,EAAQ7B,OAAO4C,OAAO,oB,QCL3CU,G,OAAU,CACdC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRC,MAAO,CACLrB,OAAQ,IAGZsB,qBAAqB,EACrBC,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACTC,MAAO,SAAUC,EAAa3C,GAC5B,OAAOqB,IAAQsB,EAAYC,OAAOtB,OAAO,WAI/CuB,OAAQ,CACNC,MAAO,CACL,CACEC,KAAM,OACNC,KAAM,CACJ1B,OAAQ,WACR2B,cAAe,QAIrBC,MAAO,CACL,CACEC,UAAW,CACTjB,SAAS,GAEXkB,MAAO,CAELC,SAAU,SAAUT,EAAOU,EAAOC,GAChC,OAAOlC,IAAQuB,GAAOtB,OAAO,aAQnCkC,EAAiB,SAACxD,EAAMrB,GAC5B,IACI8E,EADAC,EAAY,GAEhB,IAAK,IAAIC,KAAQ3D,EAAKtB,MAAO,CAC3B,GAAI+E,EAAe,CACjB,IAAIG,EAAe,CACjBC,EAAGF,EACHG,EAAG9D,EAAKrB,GAAWgF,GAAQF,GAE7BC,EAAUK,KAAKH,GAEjBH,EAAgBzD,EAAKrB,GAAWgF,GAElC,OAAOD,GA2CMM,MAxCf,YAAmC,IAAdrF,EAAa,EAAbA,UAAa,EACRsF,mBAAS,IADD,mBACzBjE,EADyB,KACnBkE,EADmB,KAoBhC,OAjBAC,qBAAU,YACO,uCAAG,sBAAAhE,EAAA,sEACViE,MAAM,8DACTC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACrE,GACL,IAAM0D,EAAYF,EAAexD,EAAMrB,GACvCuF,EAAQR,GACRzE,QAAQC,IAAIwE,MARA,2CAAH,qDAafc,KACC,CAAC7F,IAGF,qBAAKQ,UAAU,QAAf,UACO,OAAJa,QAAI,IAAJA,OAAA,EAAAA,EAAMyE,QAAS,GACd,cAAC,OAAD,CACEzE,KAAM,CACJ0E,SAAU,CACR,CACEC,gBAAiB,yBACjBC,YAAa,UACb5E,KAAMA,KAIZgC,QAASA,O,0CCjGbH,EAAI,iCAEG2C,EAAS,uCAAE,WAAOjE,GAAP,qBAAAJ,EAAA,6DAChB0E,EAAahD,EAEdtB,IACCsE,EAAa,GAAD,OAAIhD,EAAJ,sBAAqBtB,IAJjB,kBAOGuE,IAAMC,IAAIF,GAPb,uBAOT7E,EAPS,EAOTA,KAEDgF,EAAa,CACfC,UAAUjF,EAAKiF,UACfpF,UAAUG,EAAKH,UACfC,OAAOE,EAAKF,OACZoF,WAAWlF,EAAKkF,YAbJ,kBAkBTF,GAlBS,4FAAF,sDAyBTG,EAAc,uCAAC,gCAAAhF,EAAA,+EAED2E,IAAMC,IAAN,UAAalD,EAAb,WAFC,uBAEb7B,EAFa,EAEbA,KAEDoF,EAAapF,EAAKM,KAAI,SAAC+E,GAAD,MAAc,CACtCJ,UAAUI,EAAUJ,UAAUrG,MAC9BkB,OAAOuF,EAAUvF,OAAOlB,MACxB+E,KAAK0B,EAAUC,eAPC,kBAUbF,GAVa,yFAAD,qDAiBdG,EAAc,uCAAC,8BAAApF,EAAA,+EAEW2E,IAAMC,IAAN,UAAalD,EAAb,eAFX,uBAEPH,EAFO,EAEb1B,KAAM0B,UAFO,kBAIbA,EAAUpB,KAAI,SAACC,GAAD,OAAWA,EAAQiF,SAJpB,yFAAD,qD,OCuBZC,MA9Df,YAAgC,IAAhBzF,EAAe,EAAfA,KAAKO,EAAU,EAAVA,QAAU,EAEG0D,mBAAS,IAFZ,mBAErBoB,EAFqB,KAEXK,EAFW,KAI3BvB,qBAAU,YACQ,uCAAC,sBAAAhE,EAAA,kEACXuF,EADW,SACQP,IADR,6EAAD,qDAGdQ,KAGF,IAEF,IAAMC,EACiB,IAAnBP,EAAUZ,OAEV,cAAC,OAAD,CACAzE,KAAM,CACF6F,OAAOR,EAAU/E,KAAI,qBAAEqD,QACvBe,SAAS,CAAC,CACN1E,KAAKqF,EAAU/E,KAAI,qBAAE2E,aACrBvC,MAAM,WACNkC,YAAY,UACZkB,MAAK,GACP,CACE9F,KAAKqF,EAAU/E,KAAI,qBAAER,UACrB4C,MAAM,SACNkC,YAAY,MACZD,gBAAgB,oBAChBmB,MAAK,OAGT,KAGFC,EACF/F,EAAKiF,UACD,cAAC,MAAD,CACAjF,KAAM,CACF6F,OAAO,CAAC,WAAW,YAAY,UAC/BnB,SAAS,CAAC,CACNhC,MAAM,SACNiC,gBAAgB,CAAC,SAAS,cAAc,OACxC3E,KAAK,CAACA,EAAKiF,UAAUrC,MAAM5C,EAAKH,UAAU+C,MAAM5C,EAAKF,OAAO8C,UAGpEZ,QAAS,CACLC,OAAO,CAAC+D,SAAQ,GAChBvH,MAAM,CAACyD,SAAQ,EAAK+D,KAAK,GAAD,OAAI1F,OAGlC,KAGN,OACI,sBAAKpB,UAAU,YAAf,UACI,8EACCoB,EAAQwF,EAASH,MCHfM,MApDf,WAAoB,IAAD,EAE6BjC,mBAAS,IAFtC,mBAETkC,EAFS,KAEQC,EAFR,OAGenC,mBAAS,IAHxB,mBAGToC,EAHS,KAGCC,EAHD,OAIiBrC,mBAAS,IAJ1B,mBAITsC,EAJS,KAIEC,EAJF,KAoCf,OA9BArC,qBAAU,YACQ,uCAAC,sBAAAhE,EAAA,kEACfiG,EADe,SACWb,IADX,6EAAD,qDAIdI,MAGJxB,qBAAU,YACK,uCAAE,4BAAAhE,EAAA,sEACMqE,IADN,OACLxE,EADK,OAGXsG,EAAatG,GAHF,2CAAF,qDAMXyG,KACA,IAEJtC,qBAAU,YACU,uCAAG,WAAM5D,GAAN,eAAAJ,EAAA,sEACFqE,EAAUjE,GADR,OACbP,EADa,OAGnBsG,EAAatG,GAHM,2CAAH,sDAKlB0G,CAAWH,KACX,CAACA,IAEHtH,QAAQC,IAAI,mCAAmCqH,GAC/CtH,QAAQC,IAAI,iCAAiCmH,GAGzC,gCACI,cAACM,EAAA,EAAD,CAAaxH,UAAU,gBAAvB,SACI,eAACyH,EAAA,EAAD,CAAcC,aAAa,GAAMC,SAAU,SAACC,GAAD,OAAKP,EAAcO,EAAEC,OAAOpE,QAASzD,UAAU,iBAA1F,UACI,wBAAQ8H,MAAM,SAAd,oBACCd,EAAiB7F,KAAI,SAACC,EAAQ2G,GAAT,OAAa,wBAAgBtE,MAAOrC,EAAvB,SAAiCA,GAApB2G,WAIxD,cAAC,EAAD,CAAOlH,KAAMqG,EACb9F,QAASgG,Q,OCnCNY,MAjBf,WACE,OACE,qBAAKhI,UAAU,UAAf,SACE,wBAAQA,UAAU,SAASiI,IAAI,yCAC/BC,MAAM,OACNC,OAAO,QACPC,OAAO,OACPlI,MAAO,CAACmI,OAAO,OAAOC,SAAS,UAC/BC,UAAU,MACVC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,uB,OCoCGC,MA7Cf,WAEI,OACI,sBAAK3I,UAAU,SAAf,UACQ,qBAAKA,UAAU,eAAeiI,IAAI,0GAA0GW,IAAI,SAEpJ,sBAAK5I,UAAU,cAAf,UAEA,qBAAKA,UAAU,iBAAf,SACI,sBAAMA,UAAU,wBAAhB,SACQ,mBAAG6I,KAAK,OAAR,qBAIZ,qBAAK7I,UAAU,iBAAf,SACI,sBAAMA,UAAU,wBAAhB,SACA,mBAAG6I,KAAK,SAAR,uBAKA,qBAAK7I,UAAU,iBAAf,SACA,sBAAMA,UAAU,wBAAhB,SAEA,mBAAG6I,KAAK,UAAR,wBAKA,qBAAK7I,UAAU,iBAAf,SACA,sBAAMA,UAAU,wBAAhB,SACA,mBAAG6I,KAAK,OAAR,qBAIA,qBAAK7I,UAAU,iBAAf,SACA,sBAAMA,UAAU,wBAAhB,SACA,mBAAG6I,KAAK,aAAR,kCCyIDC,MAnKf,WAAgB,IAAD,EACuBhE,mBAAS,IADhC,mBACJvC,EADI,KACOwG,EADP,OAEmBjE,mBAAS,aAF5B,mBAEJ1D,EAFI,KAEK4H,EAFL,OAG2BlE,mBAAS,IAHpC,mBAGJvD,EAHI,KAGS0H,EAHT,OAIuBnE,mBAAS,IAJhC,mBAIJoE,EAJI,KAIOC,EAJP,OAKuBrE,mBAAS,CAAEtD,IAAK,SAAU4H,KAAM,SALvD,mBAKJC,EALI,KAKOC,EALP,OAMmBxE,mBAAS,GAN5B,mBAMJyE,EANI,KAMKC,EANL,OAO6B1E,mBAAS,IAPtC,mBAOJ2E,EAPI,KAOUC,EAPV,OAQuB5E,mBAAS,SARhC,mBAQJtF,EARI,KAQOmK,EARP,KAaX3E,qBAAU,YACgB,uCAAG,sBAAAhE,EAAA,sEACfiE,MAAM,4CAA4CC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC/EF,MAAK,SAACrE,GACH,IAAM0B,EAAY1B,EAAKM,KAAI,SAACC,GAAD,MAAc,CACrCiF,KAAMjF,EAAQA,QACdqC,MAAOrC,EAAQG,YAAYqI,SAGzB9I,EAAaF,EAASC,GAC5BsI,EAAarI,GACb4I,EAAgB7I,GAChBkI,EAAaxG,MAXA,2CAAH,qDActBsH,KACD,IAEH7E,qBAAU,WACNC,MAAM,sCAAsCC,MAAK,SAACC,GAAD,OAAcA,EAASC,UACnEF,MAAK,SAAArE,GACFoI,EAAepI,QAExB,IAKH,IAAMiJ,EAAe,uCAAG,WAAMC,GAAN,iBAAA/I,EAAA,6DACdgJ,EAAcD,EAAMlC,OAAOpE,MACjCuF,EAAWgB,GAELtH,EAAsB,cAAhBsH,EAA8B,qCAA9B,mDAAiHA,GAJzG,SAOd/E,MAAMvC,GAAKwC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACtCF,MAAK,SAAArE,GACFmI,EAAWgB,GAGXf,EAAepI,GACfyI,EAAa,CAACzI,EAAKU,YAAYC,IAAKX,EAAKU,YAAYE,OACrD+H,EAAW,MAdC,2CAAH,sDAgCrB,OAEM,sBAAKxJ,UAAY,MAAjB,UACA,cAAC,EAAD,IACA,mBAAGqG,KAAK,MAAR,SACA,sBAAKrG,UAAY,YAAjB,UACE,sBAAKA,UAAY,cAAjB,UACJ,oBAAIA,UAAY,UAAhB,kCACC,cAACwH,EAAA,EAAD,CAAaxH,UAAY,gBAAzB,SACD,eAACiK,EAAA,EAAD,CAAQC,QAAU,WAClBzG,MAAUrC,EACVuG,SAAamC,EAFb,UAGA,cAACK,EAAA,EAAD,CAAU1G,MAAQ,YAAlB,yBAHA,IAIIlB,EAAUpB,KAAI,SAAAC,GAAO,OACnB,eAAC+I,EAAA,EAAD,CAAU1G,MAAUrC,EAAQqC,MAA5B,cAAuCrC,EAAQiF,KAA/C,kBAON,sBAAKrG,UAAY,aAAjB,UACA,cAAC,EAAD,CACAX,OAAoB,UAAZG,EACRW,QAtCJ,SAAeyH,GACb+B,EAAa,UAsCXnK,UAAWA,EACXF,MAAQ,oBACRC,MAAU6C,EAAiBb,EAAY6I,YACvC3K,MAAU8B,EAAYhC,QAExB,cAAC,EAAD,CACEF,OAAoB,cAAZG,EACRW,QAtCJ,SAAmByH,GACjB+B,EAAa,cAsCXnK,UAAWA,EACXF,MAAQ,YACRC,MAAU6C,EAAiBb,EAAY8I,gBACvC5K,MAAU8B,EAAYb,YAExB,cAAC,EAAD,CACErB,OAAoB,WAAZG,EACRW,QAlDJ,SAAgByH,GACd+B,EAAa,WAkDXnK,UAAWA,EACXF,MAAQ,SACRC,MAAU6C,EAAiBb,EAAY+I,aACvC7K,MAAU8B,EAAYZ,iBAStB,cAACV,EAAA,EAAD,CAAMD,UAAY,aAAlB,SACA,eAACI,EAAA,EAAD,WACA,iDAAqBZ,EAArB,OACA,cAAC,EAAD,CAAWA,UAAcA,IACzB,wDACA,mBAAG6G,KAAK,QAAR,SACA,cAAC,EAAD,CAAO9D,UAAc2G,WAKvB,mBAAG7C,KAAK,SAAR,SACA,cAAC,EAAD,MAGE,mBAAGA,KAAK,MAAR,SACA,cAAC,EAAD,CAAKrG,UAAY,aACjBuC,UAAckH,EACdjK,UAAcA,EACd8B,OAAW+H,EACX7G,KAAS+G,MAIT,oBAAGlD,KAAK,YAAR,UACE,oBAAInG,MAAO,CAACqK,UAAU,SAASC,UAAU,OAAQlK,MAAM,aAAvD,mCACA,cAAC,EAAD,WC5JKmK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzF,MAAK,YAAkD,IAA/C0F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.48512e53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./InfoBox.css\";\r\nimport {Card,CardContent,Typography} from \"@material-ui/core\";\r\n\r\nfunction InfoBox({active,title,cases,casesType,total,...props}){\r\n\r\n  const customStyle={\r\n    borderTopColor:''\r\n  };\r\n\r\n  if(casesType==='cases'&& active){\r\n    customStyle.borderTop='10px solid orange';\r\n  }\r\n  else if(casesType==='deaths' && active){\r\n    customStyle.borderTop='10px solid red';\r\n  }\r\n  else if(casesType==='recovered' && active){\r\n    customStyle.borderTop='10px solid greenyellow';\r\n  }\r\n\r\n  console.log(\"type of cases is    \",casesType);\r\n    return (\r\n      <div className=\"infoBox\">\r\n        <Card \r\n         style={customStyle}\r\n          onClick={props.onClick}>\r\n          <CardContent>\r\n            <Typography className=\"infoBox__title\" color=\"textSecondary\">{title}</Typography>\r\n            <h2 className=\"infoBox__cases\">{cases}</h2>\r\n            <Typography className=\"infoBox__total\" color=\"textSecondary\">{total} Total</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n \r\n\r\nexport default InfoBox;\r\n","import {Circle,Popup} from \"react-leaflet\";\r\nimport React from \"react\";\r\nimport numeral from \"numeral\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    multiplier: 500,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    multiplier: 700,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData=(data)=>{\r\n  const sortedData=[...data];\r\n\r\n  sortedData.sort((a,b)=>{\r\n    if(a.cases>b.cases){\r\n      return -1;\r\n    }else{\r\n      return 1;\r\n    }\r\n  })\r\n  return sortedData;\r\n}\r\n\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n\r\nexport const prettyPrintStats=(stat)=>(\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}`:null\r\n)\r\n","import React from \"react\";\r\nimport {MapContainer as LeasfletMap,TileLayer} from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport {showDataOnMap} from \"./util\";\r\n\r\nfunction Map({countries,center,zoom,casesType}){\r\n  return (\r\n    <div className=\"map\">\r\n      <h1>World Map</h1>\r\n      <LeasfletMap center={center} zoom={zoom}>\r\n    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"http:osm.org/copyright\">OpenStreetMap</a> contributors' />\r\n\r\n      {showDataOnMap(countries,casesType)}\r\n    </LeasfletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({countries}){\r\n  return (\r\n    <div className=\"table\">\r\n      {countries.map(country =>(\r\n        <tr>\r\n        <td>{country.country}</td>\r\n      <td><strong>{numeral(country.cases).format(\"0,0\")}</strong></td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport \"./LineGraph.css\"\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          const chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div className=\"graph\">\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import axios from \"axios\";\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData= async (country)=>{\r\n    let changableUrl=url;\r\n\r\n    if(country){\r\n        changableUrl=`${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data}=await axios.get(changableUrl);\r\n\r\n        const requiredData={\r\n            confirmed:data.confirmed,\r\n            recovered:data.recovered,\r\n            deaths:data.deaths,\r\n            lastUpdate:data.lastUpdate\r\n\r\n        }\r\n\r\n\r\n        return requiredData;\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData=async()=>{\r\n    try{\r\n        const {data}=await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries=async()=>{\r\n    try{\r\n        const {data:{countries}}=await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country)=>country.name);\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport \"./Chart.css\";\r\nimport {fetchDailyData} from \"./axios\";\r\nimport {Line,Bar} from \"react-chartjs-2\";\r\n\r\n\r\n\r\nfunction Chart({data,country}) {\r\n\r\n    const[dailyData,setDailyData]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI=async()=>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n\r\n        \r\n    },[]);\r\n\r\n    const lineChart=(\r\n        dailyData.length!==0\r\n        ?(\r\n        <Line \r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n            }],\r\n        }}\r\n        />):null\r\n    );\r\n\r\n    const barChart=(\r\n        data.confirmed?(\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:['orange','greenyellow','red'],\r\n                    data:[data.confirmed.value,data.recovered.value,data.deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{dipslay:false},\r\n                title:{display:true,text:`${country}`}\r\n            }} \r\n            />\r\n        ):null\r\n    );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Graphical Representation of cases and deaths</h1>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"./Country.css\";\r\nimport {NativeSelect,FormControl} from \"@material-ui/core\";\r\nimport {fetchCountries} from \"./axios\";\r\nimport {fetchData} from \"./axios\";\r\nimport Chart from \"./Chart\";\r\n\r\n\r\n\r\nfunction Country() {\r\n\r\n    const[fetchedCountries,setFetchedCountries]=useState([]);\r\n    const[graphData,setGraphData]=useState({});\r\n    const[mapCountry,setMapCountry]=useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI=async()=>{\r\n        setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    });\r\n\r\n    useEffect(()=>{\r\n        const graph= async() => {\r\n          const data=await fetchData();\r\n  \r\n          setGraphData(data);\r\n        }\r\n  \r\n        graph();\r\n      },[])\r\n  \r\n    useEffect(()=>{\r\n        const graphsData = async(country) => {\r\n        const data=await fetchData(country);\r\n\r\n        setGraphData(data);\r\n      }\r\n      graphsData(mapCountry);\r\n    },[mapCountry]);\r\n\r\n    console.log(\"Picked country is >>>>>>>>>>>>>>\",mapCountry)\r\n    console.log(\"The respective country data is\",graphData)\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className=\"form__control\">\r\n                <NativeSelect defaultValue=\"\"    onChange={(e)=>setMapCountry(e.target.value)}  className=\"native__select\">\r\n                    <option vlaue=\"global\">Global</option>\r\n                    {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n                </NativeSelect>\r\n            </FormControl>\r\n\r\n            <Chart data={graphData}\r\n            country={mapCountry} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React from \"react\";\r\nimport \"./Widgets.css\";\r\n\r\nfunction Widgets(){\r\n  return (\r\n    <div className=\"widgets\">\r\n      <iframe className=\"iframe\" src=\"https://www.covid19india.org/resources\"\r\n      width=\"100%\"\r\n      height=\"400px\"\r\n      margin=\"10px\"\r\n      style={{border:\"none\",overflow:\"hidden\"}}\r\n      scrolling=\"yes\"\r\n      farmeborder=\"0\"\r\n      allowTransparency=\"true\"\r\n      allow=\"encrypted-media\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;\r\n","import React from 'react';\r\nimport \"./Header.css\";\r\n\r\n\r\n\r\nfunction Header() \r\n{\r\n    return (\r\n        <div className=\"header\">\r\n                <img className=\"header__logo\" src=\"https://i.etsystatic.com/16452967/c/2000/1589/0/239/il/b18081/2816876738/il_340x270.2816876738_jzky.jpg\" alt=\"Logo\" ></img>\r\n\r\n            <div className=\"header__nav\">\r\n\r\n            <div className=\"header__option\">\r\n                <span className=\"header__optionLineOne\">\r\n                        <a href=\"#top\">Top</a>\r\n                    </span>\r\n                </div>\r\n\r\n            <div className=\"header__option\">\r\n                <span className=\"header__optionLineOne\">\r\n                <a href=\"#table\">Table</a> \r\n                    </span>\r\n            \r\n                </div>\r\n                    \r\n                <div className=\"header__option\">\r\n                <span className=\"header__optionLineOne\">\r\n\r\n                <a href=\"#graphs\">Graphs</a> \r\n \r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"header__option\">\r\n                <span className=\"header__optionLineOne\">\r\n                <a href=\"#map\">Map</a> \r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"header__option\">\r\n                <span className=\"header__optionLineOne\">\r\n                <a href=\"#resources\">Resources</a> \r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStats } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport Country from \"./Country\";\nimport Widgets from \"./Widgets\";\nimport Header from \"./Header\";\n\n\n\n\nfunction App() {\n    const [countries, setCountries] = useState([]);\n    const [country, setCountry] = useState('worldwide');\n    const [countryInfo, setCountryInfo] = useState({});\n    const [tableData, setTableData] = useState([]);\n    const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.476 });\n    const [mapZoom, setMapZoom] = useState(3);\n    const [mapCountries, setMapCountries] = useState([]);\n    const [casesType, setCasesType] = useState(\"cases\");\n \n    \n\n    //Runs a code based on a particular condition\n    useEffect(() => {\n        const getCountriesData = async() => {\n            await fetch(\"https://disease.sh/v3/covid-19/countries\").then((response) => response.json())\n                .then((data) => {\n                    const countries = data.map((country) => ({\n                        name: country.country,\n                        value: country.countryInfo.iso2\n                    }));\n\n                    const sortedData = sortData(data)\n                    setTableData(sortedData);\n                    setMapCountries(data);\n                    setCountries(countries);\n                });\n        };\n        getCountriesData();\n    }, []);\n\n    useEffect(() => {\n        fetch(\"https://disease.sh/v3/covid-19/all\").then((response) => response.json())\n            .then(data => {\n                setCountryInfo(data);\n            })\n    }, [])\n\n\n\n\n    const onCountryChange = async(event) => {\n        const countryCode = event.target.value;\n        setCountry(countryCode);\n\n        const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n\n        await fetch(url).then(response => response.json())\n            .then(data => {\n                setCountry(countryCode);\n\n                //All the info regarding the countries\n                setCountryInfo(data);\n                setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n                setMapZoom(4);\n            })\n    }\n    \n    function cases(e){\n      setCasesType('cases');\n    }\n\n    function deaths(e){\n      setCasesType('deaths');\n    }\n\n    function recovered(e){\n      setCasesType('recovered');\n    }\n\n \n\n    return (\n\n          <div className = \"app\" >\n          <Header />\n          <a name=\"top\">\n          <div className = \"app__left\" >\n            <div className = \"app__header\" >\n        <h1 className = \"heading\" > COVID - 19 TRACKER </h1>\n         <FormControl className = \"app__dropdown\" >\n        <Select variant = \"outlined\"\n        value = { country }\n        onChange = { onCountryChange } >\n        <MenuItem value = \"worldwide\" > Worldwide </MenuItem> {\n            countries.map(country => (\n              <MenuItem value = { country.value }> { country.name } </MenuItem>\n            ))\n          }\n      </Select>\n      </FormControl>\n      </div>\n\n        <div className = \"app__stats\" >\n        <InfoBox \n        active={casesType==='cases'}\n        onClick = {cases}\n        casesType={casesType}\n        title = \"Coronavirus cases\"\n        cases = { prettyPrintStats(countryInfo.todayCases) }\n        total = { countryInfo.cases }\n        />\n      <InfoBox\n        active={casesType==='recovered'}\n        onClick = {recovered}\n        casesType={casesType}\n        title = \"Recovered\"\n        cases = { prettyPrintStats(countryInfo.todayRecovered) }\n        total = { countryInfo.recovered }\n        />\n      <InfoBox\n        active={casesType==='deaths'}\n        onClick = {deaths}\n        casesType={casesType}\n        title = \"Deaths\"\n        cases = { prettyPrintStats(countryInfo.todayDeaths) }\n        total = { countryInfo.deaths}\n        />\n        </div>\n\n        </div>\n                      \n        </a>\n\n\n        <Card className = \"app__right\" >\n        <CardContent>\n        <h3> Worldwide New { casesType } </h3>\n        <LineGraph casesType = { casesType }/>\n        <h3 > Live Cases By County </h3>\n        <a name=\"table\">\n        <Table countries = { tableData }/>\n        </a>\n      </CardContent>\n      </Card>\n\n      <a name=\"graphs\">\n      <Country  />\n      </a>\n        \n        <a name=\"map\">\n        <Map className = \"app__right\"\n        countries = { mapCountries }\n        casesType = { casesType }\n        center = { mapCenter }\n        zoom = { mapZoom }\n        />\n        </a>\n\n        <a name=\"resources\">\n          <h2 style={{textAlign:'center',marginTop:'10px', color:'royalblue'}}>From covid19india.org</h2>\n          <Widgets />\n        </a>\n        \n\n      \n\n        </div>\n      \n    );\n}\n\nexport default App;\n\n// https://disease.sh/v3/covid-19/countries\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}